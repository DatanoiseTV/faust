ID_0 = vslider("[2] Level [unit:dB] [style:knob]    [tooltip: Output scale factor]/[5] Output/[0] Zita_Rev1 [tooltip: ~ ZITA REV1 FEEDBACK DELAY NETWORK (FDN) & SCHROEDER ALLPASS-COMB REVERBERATOR (8x8). See Faust's effect.lib for documentation and references]",16.79f,-7e+01f,4e+01f,0.1f);
ID_1 = 0.05f*ID_0;
ID_2 = pow(1e+01f, ID_1);
ID_3 = 0.001f*ID_2;
ID_4 = W28;
ID_5 = proj0(ID_4);
ID_6 = ID_5';
ID_7 = 0.999f*ID_6;
ID_8 = ID_3+ID_7;
ID_9 = letrec(W28 = (ID_8));
ID_10 = proj0(ID_9);
ID_11 = ID_10@0;
ID_12 = vslider("[1] Dry/Wet Mix [style:knob]    [tooltip: -1 = dry, 1 = wet]/[5] Output/[0] Zita_Rev1 [tooltip: ~ ZITA REV1 FEEDBACK DELAY NETWORK (FDN) & SCHROEDER ALLPASS-COMB REVERBERATOR (8x8). See Faust's effect.lib for documentation and references]",0.4492f,-1.0f,1.0f,0.01f);
ID_13 = 0.001f*ID_12;
ID_14 = W27;
ID_15 = proj0(ID_14);
ID_16 = ID_15';
ID_17 = 0.999f*ID_16;
ID_18 = ID_13+ID_17;
ID_19 = letrec(W27 = (ID_18));
ID_20 = proj0(ID_19);
ID_21 = ID_20@0;
ID_22 = (ID_21+1.0f);
ID_23 = float(fSamplingFreq);
ID_24 = max(1.0f, ID_23);
ID_25 = min(1.92e+05f, ID_24);
ID_26 = 6.2831855f/ID_25;
ID_27 = vslider("[1] Eq2 Freq [unit:Hz] [style:knob] [scale:log]    [tooltip: Center-frequency of second-order Regalia-Mitra peaking equalizer section 2]/[4] RM Peaking Equalizer 2/[0] Zita_Rev1 [tooltip: ~ ZITA REV1 FEEDBACK DELAY NETWORK (FDN) & SCHROEDER ALLPASS-COMB REVERBERATOR (8x8). See Faust's effect.lib for documentation and references]",1.5e+03f,1.6e+02f,1e+04f,1.0f);
ID_28 = vslider("[2] Eq2 Level [unit:dB] [style:knob]    [tooltip: Peak level in dB of second-order Regalia-Mitra peaking equalizer section 2]/[4] RM Peaking Equalizer 2/[0] Zita_Rev1 [tooltip: ~ ZITA REV1 FEEDBACK DELAY NETWORK (FDN) & SCHROEDER ALLPASS-COMB REVERBERATOR (8x8). See Faust's effect.lib for documentation and references]",0.0f,-15.0f,15.0f,0.1f);
ID_29 = 0.05f*ID_28;
ID_30 = pow(1e+01f, ID_29);
ID_31 = max(0.0f, ID_30);
ID_32 = sqrt(ID_31);
ID_33 = ID_27/ID_32;
ID_34 = ID_26*ID_33;
ID_35 = (1.0f-ID_34);
ID_36 = (ID_34+1.0f);
ID_37 = ID_35/ID_36;
ID_38 = W22;
ID_39 = proj0(ID_38);
ID_40 = ID_39';
ID_41 = 0.6f*ID_40;
ID_42 = vslider("[4] HF Damping [unit:Hz] [style:knob] [scale:log]    [tooltip: Frequency (Hz) at which the high-frequency T60 is half the middle-band's T60]/[2] Decay Times in Bands (see tooltips)/[0] Zita_Rev1 [tooltip: ~ ZITA REV1 FEEDBACK DELAY NETWORK (FDN) & SCHROEDER ALLPASS-COMB REVERBERATOR (8x8). See Faust's effect.lib for documentation and references]",6e+03f,1.5e+03f,2.352e+04f,1.0f);
ID_43 = ID_26*ID_42;
ID_44 = cos(ID_43);
ID_45 = 0.219991f*ID_25;
ID_46 = ID_45+0.5f;
ID_47 = floor(ID_46);
ID_48 = 6.9077554f*ID_47;
ID_49 = (0.0f-ID_48);
ID_50 = ID_49/ID_25;
ID_51 = vslider("[3] Mid RT60 [unit:s] [style:knob] [scale:log]     [tooltip: T60 = time (in seconds) to decay 60dB in middle band]/[2] Decay Times in Bands (see tooltips)/[0] Zita_Rev1 [tooltip: ~ ZITA REV1 FEEDBACK DELAY NETWORK (FDN) & SCHROEDER ALLPASS-COMB REVERBERATOR (8x8). See Faust's effect.lib for documentation and references]",2.0f,1.0f,8.0f,0.1f);
ID_52 = ID_50/ID_51;
ID_53 = exp(ID_52);
ID_54 = pow(ID_53, 2.0f);
ID_55 = ID_44*ID_54;
ID_56 = (1.0f-ID_55);
ID_57 = (1.0f-ID_54);
ID_58 = ID_56/ID_57;
ID_59 = pow(ID_56, 2.0f);
ID_60 = pow(ID_57, 2.0f);
ID_61 = ID_59/ID_60;
ID_62 = ID_61+-1.0f;
ID_63 = max(0.0f, ID_62);
ID_64 = sqrt(ID_63);
ID_65 = (ID_58-ID_64);
ID_66 = W23;
ID_67 = proj0(ID_66);
ID_68 = ID_67';
ID_69 = ID_65*ID_68;
ID_70 = 1.0f-ID_58;
ID_71 = (ID_64+ID_70);
ID_72 = ID_53*ID_71;
ID_73 = W0;
ID_74 = proj7(ID_73);
ID_75 = ID_74';
ID_76 = vslider("[2] Low RT60 [unit:s] [style:knob] [scale:log]     [style:knob] [tooltip: T60 = time (in seconds) to decay 60dB in low-frequency band]/[2] Decay Times in Bands (see tooltips)/[0] Zita_Rev1 [tooltip: ~ ZITA REV1 FEEDBACK DELAY NETWORK (FDN) & SCHROEDER ALLPASS-COMB REVERBERATOR (8x8). See Faust's effect.lib for documentation and references]",3.0f,1.0f,8.0f,0.1f);
ID_77 = ID_50/ID_76;
ID_78 = exp(ID_77);
ID_79 = ID_78/ID_53;
ID_80 = (ID_79+-1.0f);
ID_81 = 3.1415927f/ID_25;
ID_82 = vslider("[1] LF X [unit:Hz] [style:knob] [scale:log]    [tooltip: Crossover frequency (Hz) separating low and middle frequencies]/[2] Decay Times in Bands (see tooltips)/[0] Zita_Rev1 [tooltip: ~ ZITA REV1 FEEDBACK DELAY NETWORK (FDN) & SCHROEDER ALLPASS-COMB REVERBERATOR (8x8). See Faust's effect.lib for documentation and references]",2e+02f,5e+01f,1e+03f,1.0f);
ID_83 = ID_81*ID_82;
ID_84 = tan(ID_83);
ID_85 = 1.0f/ID_84;
ID_86 = (ID_85+1.0f);
ID_87 = 1.0f/ID_86;
ID_88 = (1.0f-ID_85);
ID_89 = W24;
ID_90 = proj0(ID_89);
ID_91 = ID_90';
ID_92 = ID_88*ID_91;
ID_93 = ID_74@2;
ID_94 = ID_75+ID_93;
ID_95 = (ID_92-ID_94);
ID_96 = ID_87*ID_95;
ID_97 = 0.0f-ID_96;
ID_98 = letrec(W24 = (ID_97));
ID_99 = proj0(ID_98);
ID_100 = ID_99@0;
ID_101 = ID_80*ID_100;
ID_102 = (ID_75+ID_101);
ID_103 = ID_72*ID_102;
ID_104 = ID_69+ID_103;
ID_105 = letrec(W23 = (ID_104));
ID_106 = proj0(ID_105);
ID_107 = ID_106@0;
ID_108 = 0.35355338f*ID_107;
ID_109 = (ID_108+1e-20f);
ID_110 = 0.019123f*ID_25;
ID_111 = ID_110+0.5f;
ID_112 = floor(ID_111);
ID_113 = ID_47-ID_112;
ID_114 = int(ID_113);
ID_115 = (ID_114&16383);
ID_116 = ID_109@ID_115;
ID_117 = ID_41+ID_116;
ID_118 = 0.001f*ID_25;
ID_119 = vslider("[1] In Delay [unit:ms] [style:knob]       [tooltip: Delay in ms before reverberation begins]/[1] Input/[0] Zita_Rev1 [tooltip: ~ ZITA REV1 FEEDBACK DELAY NETWORK (FDN) & SCHROEDER ALLPASS-COMB REVERBERATOR (8x8). See Faust's effect.lib for documentation and references]",6e+01f,2e+01f,1e+02f,1.0f);
ID_120 = ID_118*ID_119;
ID_121 = int(ID_120);
ID_122 = (ID_121&8191);
ID_123 = IN[1]@ID_122;
ID_124 = 0.3f*ID_123;
ID_125 = (ID_117-ID_124);
ID_126 = ID_112+-1.0f;
ID_127 = int(ID_126);
ID_128 = (ID_127&1023);
ID_129 = ID_125@ID_128;
ID_130 = 0.6f*ID_125;
ID_131 = 0.0f-ID_130;
ID_132 = letrec(W22 = (ID_129, ID_131));
ID_133 = proj1(ID_132);
ID_134 = ID_133@0;
ID_135 = W19;
ID_136 = proj0(ID_135);
ID_137 = ID_136';
ID_138 = 0.6f*ID_137;
ID_139 = 0.256891f*ID_25;
ID_140 = ID_139+0.5f;
ID_141 = floor(ID_140);
ID_142 = 6.9077554f*ID_141;
ID_143 = (0.0f-ID_142);
ID_144 = ID_143/ID_25;
ID_145 = ID_144/ID_51;
ID_146 = exp(ID_145);
ID_147 = pow(ID_146, 2.0f);
ID_148 = ID_44*ID_147;
ID_149 = (1.0f-ID_148);
ID_150 = (1.0f-ID_147);
ID_151 = ID_149/ID_150;
ID_152 = pow(ID_149, 2.0f);
ID_153 = pow(ID_150, 2.0f);
ID_154 = ID_152/ID_153;
ID_155 = ID_154+-1.0f;
ID_156 = max(0.0f, ID_155);
ID_157 = sqrt(ID_156);
ID_158 = (ID_151-ID_157);
ID_159 = W20;
ID_160 = proj0(ID_159);
ID_161 = ID_160';
ID_162 = ID_158*ID_161;
ID_163 = 1.0f-ID_151;
ID_164 = (ID_157+ID_163);
ID_165 = ID_146*ID_164;
ID_166 = proj3(ID_73);
ID_167 = ID_166';
ID_168 = ID_144/ID_76;
ID_169 = exp(ID_168);
ID_170 = ID_169/ID_146;
ID_171 = (ID_170+-1.0f);
ID_172 = W21;
ID_173 = proj0(ID_172);
ID_174 = ID_173';
ID_175 = ID_88*ID_174;
ID_176 = ID_166@2;
ID_177 = ID_167+ID_176;
ID_178 = (ID_175-ID_177);
ID_179 = ID_87*ID_178;
ID_180 = 0.0f-ID_179;
ID_181 = letrec(W21 = (ID_180));
ID_182 = proj0(ID_181);
ID_183 = ID_182@0;
ID_184 = ID_171*ID_183;
ID_185 = (ID_167+ID_184);
ID_186 = ID_165*ID_185;
ID_187 = ID_162+ID_186;
ID_188 = letrec(W20 = (ID_187));
ID_189 = proj0(ID_188);
ID_190 = ID_189@0;
ID_191 = 0.35355338f*ID_190;
ID_192 = (ID_191+1e-20f);
ID_193 = 0.027333f*ID_25;
ID_194 = ID_193+0.5f;
ID_195 = floor(ID_194);
ID_196 = ID_141-ID_195;
ID_197 = int(ID_196);
ID_198 = (ID_197&16383);
ID_199 = ID_192@ID_198;
ID_200 = ID_138+ID_199;
ID_201 = (ID_200-ID_124);
ID_202 = ID_195+-1.0f;
ID_203 = int(ID_202);
ID_204 = (ID_203&2047);
ID_205 = ID_201@ID_204;
ID_206 = 0.6f*ID_201;
ID_207 = 0.0f-ID_206;
ID_208 = letrec(W19 = (ID_205, ID_207));
ID_209 = proj1(ID_208);
ID_210 = ID_209@0;
ID_211 = 0.192303f*ID_25;
ID_212 = ID_211+0.5f;
ID_213 = floor(ID_212);
ID_214 = 6.9077554f*ID_213;
ID_215 = (0.0f-ID_214);
ID_216 = ID_215/ID_25;
ID_217 = ID_216/ID_51;
ID_218 = exp(ID_217);
ID_219 = pow(ID_218, 2.0f);
ID_220 = ID_44*ID_219;
ID_221 = (1.0f-ID_220);
ID_222 = (1.0f-ID_219);
ID_223 = ID_221/ID_222;
ID_224 = pow(ID_221, 2.0f);
ID_225 = pow(ID_222, 2.0f);
ID_226 = ID_224/ID_225;
ID_227 = ID_226+-1.0f;
ID_228 = max(0.0f, ID_227);
ID_229 = sqrt(ID_228);
ID_230 = (ID_223-ID_229);
ID_231 = W17;
ID_232 = proj0(ID_231);
ID_233 = ID_232';
ID_234 = ID_230*ID_233;
ID_235 = 1.0f-ID_223;
ID_236 = (ID_229+ID_235);
ID_237 = ID_218*ID_236;
ID_238 = proj5(ID_73);
ID_239 = ID_238';
ID_240 = ID_216/ID_76;
ID_241 = exp(ID_240);
ID_242 = ID_241/ID_218;
ID_243 = (ID_242+-1.0f);
ID_244 = W18;
ID_245 = proj0(ID_244);
ID_246 = ID_245';
ID_247 = ID_88*ID_246;
ID_248 = ID_238@2;
ID_249 = ID_239+ID_248;
ID_250 = (ID_247-ID_249);
ID_251 = ID_87*ID_250;
ID_252 = 0.0f-ID_251;
ID_253 = letrec(W18 = (ID_252));
ID_254 = proj0(ID_253);
ID_255 = ID_254@0;
ID_256 = ID_243*ID_255;
ID_257 = (ID_239+ID_256);
ID_258 = ID_237*ID_257;
ID_259 = ID_234+ID_258;
ID_260 = letrec(W17 = (ID_259));
ID_261 = proj0(ID_260);
ID_262 = ID_261@0;
ID_263 = 0.35355338f*ID_262;
ID_264 = (ID_263+1e-20f);
ID_265 = 0.029291f*ID_25;
ID_266 = ID_265+0.5f;
ID_267 = floor(ID_266);
ID_268 = ID_213-ID_267;
ID_269 = int(ID_268);
ID_270 = (ID_269&8191);
ID_271 = ID_264@ID_270;
ID_272 = W16;
ID_273 = proj0(ID_272);
ID_274 = ID_273';
ID_275 = 0.6f*ID_274;
ID_276 = ID_124+ID_275;
ID_277 = (ID_271+ID_276);
ID_278 = ID_267+-1.0f;
ID_279 = int(ID_278);
ID_280 = (ID_279&2047);
ID_281 = ID_277@ID_280;
ID_282 = 0.6f*ID_277;
ID_283 = 0.0f-ID_282;
ID_284 = letrec(W16 = (ID_281, ID_283));
ID_285 = proj1(ID_284);
ID_286 = ID_285@0;
ID_287 = W13;
ID_288 = proj0(ID_287);
ID_289 = ID_288';
ID_290 = 0.6f*ID_289;
ID_291 = 0.210389f*ID_25;
ID_292 = ID_291+0.5f;
ID_293 = floor(ID_292);
ID_294 = 6.9077554f*ID_293;
ID_295 = (0.0f-ID_294);
ID_296 = ID_295/ID_25;
ID_297 = ID_296/ID_51;
ID_298 = exp(ID_297);
ID_299 = pow(ID_298, 2.0f);
ID_300 = ID_44*ID_299;
ID_301 = (1.0f-ID_300);
ID_302 = (1.0f-ID_299);
ID_303 = ID_301/ID_302;
ID_304 = pow(ID_301, 2.0f);
ID_305 = pow(ID_302, 2.0f);
ID_306 = ID_304/ID_305;
ID_307 = ID_306+-1.0f;
ID_308 = max(0.0f, ID_307);
ID_309 = sqrt(ID_308);
ID_310 = (ID_303-ID_309);
ID_311 = W14;
ID_312 = proj0(ID_311);
ID_313 = ID_312';
ID_314 = ID_310*ID_313;
ID_315 = 1.0f-ID_303;
ID_316 = (ID_309+ID_315);
ID_317 = ID_298*ID_316;
ID_318 = proj1(ID_73);
ID_319 = ID_318';
ID_320 = ID_296/ID_76;
ID_321 = exp(ID_320);
ID_322 = ID_321/ID_298;
ID_323 = (ID_322+-1.0f);
ID_324 = W15;
ID_325 = proj0(ID_324);
ID_326 = ID_325';
ID_327 = ID_88*ID_326;
ID_328 = ID_318@2;
ID_329 = ID_319+ID_328;
ID_330 = (ID_327-ID_329);
ID_331 = ID_87*ID_330;
ID_332 = 0.0f-ID_331;
ID_333 = letrec(W15 = (ID_332));
ID_334 = proj0(ID_333);
ID_335 = ID_334@0;
ID_336 = ID_323*ID_335;
ID_337 = (ID_319+ID_336);
ID_338 = ID_317*ID_337;
ID_339 = ID_314+ID_338;
ID_340 = letrec(W14 = (ID_339));
ID_341 = proj0(ID_340);
ID_342 = ID_341@0;
ID_343 = 0.35355338f*ID_342;
ID_344 = (ID_343+1e-20f);
ID_345 = 0.024421f*ID_25;
ID_346 = ID_345+0.5f;
ID_347 = floor(ID_346);
ID_348 = ID_293-ID_347;
ID_349 = int(ID_348);
ID_350 = (ID_349&16383);
ID_351 = ID_344@ID_350;
ID_352 = ID_290+ID_351;
ID_353 = (ID_124+ID_352);
ID_354 = ID_347+-1.0f;
ID_355 = int(ID_354);
ID_356 = (ID_355&2047);
ID_357 = ID_353@ID_356;
ID_358 = 0.6f*ID_353;
ID_359 = 0.0f-ID_358;
ID_360 = letrec(W13 = (ID_357, ID_359));
ID_361 = proj1(ID_360);
ID_362 = ID_361@0;
ID_363 = 0.125f*ID_25;
ID_364 = ID_363+0.5f;
ID_365 = floor(ID_364);
ID_366 = 6.9077554f*ID_365;
ID_367 = (0.0f-ID_366);
ID_368 = ID_367/ID_25;
ID_369 = ID_368/ID_51;
ID_370 = exp(ID_369);
ID_371 = pow(ID_370, 2.0f);
ID_372 = ID_44*ID_371;
ID_373 = (1.0f-ID_372);
ID_374 = (1.0f-ID_371);
ID_375 = ID_373/ID_374;
ID_376 = pow(ID_373, 2.0f);
ID_377 = pow(ID_374, 2.0f);
ID_378 = ID_376/ID_377;
ID_379 = ID_378+-1.0f;
ID_380 = max(0.0f, ID_379);
ID_381 = sqrt(ID_380);
ID_382 = (ID_375-ID_381);
ID_383 = W11;
ID_384 = proj0(ID_383);
ID_385 = ID_384';
ID_386 = ID_382*ID_385;
ID_387 = 1.0f-ID_375;
ID_388 = (ID_381+ID_387);
ID_389 = ID_370*ID_388;
ID_390 = proj6(ID_73);
ID_391 = ID_390';
ID_392 = ID_368/ID_76;
ID_393 = exp(ID_392);
ID_394 = ID_393/ID_370;
ID_395 = (ID_394+-1.0f);
ID_396 = W12;
ID_397 = proj0(ID_396);
ID_398 = ID_397';
ID_399 = ID_88*ID_398;
ID_400 = ID_390@2;
ID_401 = ID_391+ID_400;
ID_402 = (ID_399-ID_401);
ID_403 = ID_87*ID_402;
ID_404 = 0.0f-ID_403;
ID_405 = letrec(W12 = (ID_404));
ID_406 = proj0(ID_405);
ID_407 = ID_406@0;
ID_408 = ID_395*ID_407;
ID_409 = (ID_391+ID_408);
ID_410 = ID_389*ID_409;
ID_411 = ID_386+ID_410;
ID_412 = letrec(W11 = (ID_411));
ID_413 = proj0(ID_412);
ID_414 = ID_413@0;
ID_415 = 0.35355338f*ID_414;
ID_416 = (ID_415+1e-20f);
ID_417 = 0.013458f*ID_25;
ID_418 = ID_417+0.5f;
ID_419 = floor(ID_418);
ID_420 = ID_365-ID_419;
ID_421 = int(ID_420);
ID_422 = (ID_421&8191);
ID_423 = ID_416@ID_422;
ID_424 = IN[0]@ID_122;
ID_425 = 0.3f*ID_424;
ID_426 = W10;
ID_427 = proj0(ID_426);
ID_428 = ID_427';
ID_429 = 0.6f*ID_428;
ID_430 = ID_425+ID_429;
ID_431 = (ID_423-ID_430);
ID_432 = ID_419+-1.0f;
ID_433 = int(ID_432);
ID_434 = (ID_433&1023);
ID_435 = ID_431@ID_434;
ID_436 = 0.6f*ID_431;
ID_437 = letrec(W10 = (ID_435, ID_436));
ID_438 = proj1(ID_437);
ID_439 = ID_438@0;
ID_440 = 0.127837f*ID_25;
ID_441 = ID_440+0.5f;
ID_442 = floor(ID_441);
ID_443 = 6.9077554f*ID_442;
ID_444 = (0.0f-ID_443);
ID_445 = ID_444/ID_25;
ID_446 = ID_445/ID_51;
ID_447 = exp(ID_446);
ID_448 = pow(ID_447, 2.0f);
ID_449 = ID_44*ID_448;
ID_450 = (1.0f-ID_449);
ID_451 = (1.0f-ID_448);
ID_452 = ID_450/ID_451;
ID_453 = pow(ID_450, 2.0f);
ID_454 = pow(ID_451, 2.0f);
ID_455 = ID_453/ID_454;
ID_456 = ID_455+-1.0f;
ID_457 = max(0.0f, ID_456);
ID_458 = sqrt(ID_457);
ID_459 = (ID_452-ID_458);
ID_460 = W8;
ID_461 = proj0(ID_460);
ID_462 = ID_461';
ID_463 = ID_459*ID_462;
ID_464 = 1.0f-ID_452;
ID_465 = (ID_458+ID_464);
ID_466 = ID_447*ID_465;
ID_467 = proj2(ID_73);
ID_468 = ID_467';
ID_469 = ID_445/ID_76;
ID_470 = exp(ID_469);
ID_471 = ID_470/ID_447;
ID_472 = (ID_471+-1.0f);
ID_473 = W9;
ID_474 = proj0(ID_473);
ID_475 = ID_474';
ID_476 = ID_88*ID_475;
ID_477 = ID_467@2;
ID_478 = ID_468+ID_477;
ID_479 = (ID_476-ID_478);
ID_480 = ID_87*ID_479;
ID_481 = 0.0f-ID_480;
ID_482 = letrec(W9 = (ID_481));
ID_483 = proj0(ID_482);
ID_484 = ID_483@0;
ID_485 = ID_472*ID_484;
ID_486 = (ID_468+ID_485);
ID_487 = ID_466*ID_486;
ID_488 = ID_463+ID_487;
ID_489 = letrec(W8 = (ID_488));
ID_490 = proj0(ID_489);
ID_491 = ID_490@0;
ID_492 = 0.35355338f*ID_491;
ID_493 = (ID_492+1e-20f);
ID_494 = 0.031604f*ID_25;
ID_495 = ID_494+0.5f;
ID_496 = floor(ID_495);
ID_497 = ID_442-ID_496;
ID_498 = int(ID_497);
ID_499 = (ID_498&8191);
ID_500 = ID_493@ID_499;
ID_501 = W7;
ID_502 = proj0(ID_501);
ID_503 = ID_502';
ID_504 = 0.6f*ID_503;
ID_505 = ID_425+ID_504;
ID_506 = (ID_500-ID_505);
ID_507 = ID_496+-1.0f;
ID_508 = int(ID_507);
ID_509 = (ID_508&2047);
ID_510 = ID_506@ID_509;
ID_511 = 0.6f*ID_506;
ID_512 = letrec(W7 = (ID_510, ID_511));
ID_513 = proj1(ID_512);
ID_514 = ID_513@0;
ID_515 = 0.174713f*ID_25;
ID_516 = ID_515+0.5f;
ID_517 = floor(ID_516);
ID_518 = 6.9077554f*ID_517;
ID_519 = (0.0f-ID_518);
ID_520 = ID_519/ID_25;
ID_521 = ID_520/ID_51;
ID_522 = exp(ID_521);
ID_523 = pow(ID_522, 2.0f);
ID_524 = ID_44*ID_523;
ID_525 = (1.0f-ID_524);
ID_526 = (1.0f-ID_523);
ID_527 = ID_525/ID_526;
ID_528 = pow(ID_525, 2.0f);
ID_529 = pow(ID_526, 2.0f);
ID_530 = ID_528/ID_529;
ID_531 = ID_530+-1.0f;
ID_532 = max(0.0f, ID_531);
ID_533 = sqrt(ID_532);
ID_534 = (ID_527-ID_533);
ID_535 = W5;
ID_536 = proj0(ID_535);
ID_537 = ID_536';
ID_538 = ID_534*ID_537;
ID_539 = 1.0f-ID_527;
ID_540 = (ID_533+ID_539);
ID_541 = ID_522*ID_540;
ID_542 = proj4(ID_73);
ID_543 = ID_542';
ID_544 = ID_520/ID_76;
ID_545 = exp(ID_544);
ID_546 = ID_545/ID_522;
ID_547 = (ID_546+-1.0f);
ID_548 = W6;
ID_549 = proj0(ID_548);
ID_550 = ID_549';
ID_551 = ID_88*ID_550;
ID_552 = ID_542@2;
ID_553 = ID_543+ID_552;
ID_554 = (ID_551-ID_553);
ID_555 = ID_87*ID_554;
ID_556 = 0.0f-ID_555;
ID_557 = letrec(W6 = (ID_556));
ID_558 = proj0(ID_557);
ID_559 = ID_558@0;
ID_560 = ID_547*ID_559;
ID_561 = (ID_543+ID_560);
ID_562 = ID_541*ID_561;
ID_563 = ID_538+ID_562;
ID_564 = letrec(W5 = (ID_563));
ID_565 = proj0(ID_564);
ID_566 = ID_565@0;
ID_567 = 0.35355338f*ID_566;
ID_568 = (ID_567+1e-20f);
ID_569 = 0.022904f*ID_25;
ID_570 = ID_569+0.5f;
ID_571 = floor(ID_570);
ID_572 = ID_517-ID_571;
ID_573 = int(ID_572);
ID_574 = (ID_573&8191);
ID_575 = ID_568@ID_574;
ID_576 = ID_425+ID_575;
ID_577 = W4;
ID_578 = proj0(ID_577);
ID_579 = ID_578';
ID_580 = 0.6f*ID_579;
ID_581 = (ID_576-ID_580);
ID_582 = ID_571+-1.0f;
ID_583 = int(ID_582);
ID_584 = (ID_583&2047);
ID_585 = ID_581@ID_584;
ID_586 = 0.6f*ID_581;
ID_587 = letrec(W4 = (ID_585, ID_586));
ID_588 = proj1(ID_587);
ID_589 = ID_588@0;
ID_590 = 0.153129f*ID_25;
ID_591 = ID_590+0.5f;
ID_592 = floor(ID_591);
ID_593 = 6.9077554f*ID_592;
ID_594 = (0.0f-ID_593);
ID_595 = ID_594/ID_25;
ID_596 = ID_595/ID_51;
ID_597 = exp(ID_596);
ID_598 = pow(ID_597, 2.0f);
ID_599 = ID_598*ID_44;
ID_600 = (1.0f-ID_599);
ID_601 = (1.0f-ID_598);
ID_602 = ID_600/ID_601;
ID_603 = pow(ID_600, 2.0f);
ID_604 = pow(ID_601, 2.0f);
ID_605 = ID_603/ID_604;
ID_606 = ID_605+-1.0f;
ID_607 = max(0.0f, ID_606);
ID_608 = sqrt(ID_607);
ID_609 = (ID_602-ID_608);
ID_610 = W2;
ID_611 = proj0(ID_610);
ID_612 = ID_611';
ID_613 = ID_609*ID_612;
ID_614 = 1.0f-ID_602;
ID_615 = (ID_608+ID_614);
ID_616 = ID_597*ID_615;
ID_617 = proj0(ID_73);
ID_618 = ID_617';
ID_619 = ID_595/ID_76;
ID_620 = exp(ID_619);
ID_621 = ID_620/ID_597;
ID_622 = (ID_621+-1.0f);
ID_623 = W3;
ID_624 = proj0(ID_623);
ID_625 = ID_624';
ID_626 = ID_88*ID_625;
ID_627 = ID_617@2;
ID_628 = ID_618+ID_627;
ID_629 = (ID_626-ID_628);
ID_630 = ID_87*ID_629;
ID_631 = 0.0f-ID_630;
ID_632 = letrec(W3 = (ID_631));
ID_633 = proj0(ID_632);
ID_634 = ID_633@0;
ID_635 = ID_622*ID_634;
ID_636 = (ID_618+ID_635);
ID_637 = ID_616*ID_636;
ID_638 = ID_613+ID_637;
ID_639 = letrec(W2 = (ID_638));
ID_640 = proj0(ID_639);
ID_641 = ID_640@0;
ID_642 = 0.35355338f*ID_641;
ID_643 = (ID_642+1e-20f);
ID_644 = 0.020346f*ID_25;
ID_645 = ID_644+0.5f;
ID_646 = floor(ID_645);
ID_647 = ID_592-ID_646;
ID_648 = int(ID_647);
ID_649 = (ID_648&8191);
ID_650 = ID_643@ID_649;
ID_651 = ID_650+ID_425;
ID_652 = W1;
ID_653 = proj0(ID_652);
ID_654 = ID_653';
ID_655 = 0.6f*ID_654;
ID_656 = (ID_651-ID_655);
ID_657 = ID_646+-1.0f;
ID_658 = int(ID_657);
ID_659 = (ID_658&1023);
ID_660 = ID_656@ID_659;
ID_661 = 0.6f*ID_656;
ID_662 = letrec(W1 = (ID_660, ID_661));
ID_663 = proj1(ID_662);
ID_664 = ID_663@0;
ID_665 = ID_654+ID_579;
ID_666 = ID_665+ID_503;
ID_667 = ID_428+ID_666;
ID_668 = ID_667+ID_289;
ID_669 = ID_274+ID_668;
ID_670 = ID_137+ID_669;
ID_671 = ID_40+ID_670;
ID_672 = ID_664+ID_671;
ID_673 = ID_589+ID_672;
ID_674 = ID_514+ID_673;
ID_675 = ID_439+ID_674;
ID_676 = ID_362+ID_675;
ID_677 = ID_286+ID_676;
ID_678 = ID_210+ID_677;
ID_679 = ID_134+ID_678;
ID_680 = ID_664+ID_667;
ID_681 = ID_589+ID_680;
ID_682 = ID_514+ID_681;
ID_683 = ID_439+ID_682;
ID_684 = ID_289+ID_274;
ID_685 = ID_684+ID_137;
ID_686 = ID_40+ID_685;
ID_687 = ID_362+ID_686;
ID_688 = ID_286+ID_687;
ID_689 = ID_210+ID_688;
ID_690 = ID_134+ID_689;
ID_691 = ID_683-ID_690;
ID_692 = ID_665+ID_289;
ID_693 = ID_274+ID_692;
ID_694 = ID_664+ID_693;
ID_695 = ID_589+ID_694;
ID_696 = ID_362+ID_695;
ID_697 = ID_286+ID_696;
ID_698 = ID_503+ID_428;
ID_699 = ID_698+ID_137;
ID_700 = ID_40+ID_699;
ID_701 = ID_514+ID_700;
ID_702 = ID_439+ID_701;
ID_703 = ID_210+ID_702;
ID_704 = ID_134+ID_703;
ID_705 = ID_697-ID_704;
ID_706 = ID_665+ID_137;
ID_707 = ID_40+ID_706;
ID_708 = ID_664+ID_707;
ID_709 = ID_589+ID_708;
ID_710 = ID_210+ID_709;
ID_711 = ID_134+ID_710;
ID_712 = ID_698+ID_289;
ID_713 = ID_274+ID_712;
ID_714 = ID_514+ID_713;
ID_715 = ID_439+ID_714;
ID_716 = ID_362+ID_715;
ID_717 = ID_286+ID_716;
ID_718 = ID_711-ID_717;
ID_719 = ID_654+ID_503;
ID_720 = ID_289+ID_719;
ID_721 = ID_137+ID_720;
ID_722 = ID_664+ID_721;
ID_723 = ID_514+ID_722;
ID_724 = ID_362+ID_723;
ID_725 = ID_210+ID_724;
ID_726 = ID_579+ID_428;
ID_727 = ID_274+ID_726;
ID_728 = ID_40+ID_727;
ID_729 = ID_589+ID_728;
ID_730 = ID_439+ID_729;
ID_731 = ID_286+ID_730;
ID_732 = ID_134+ID_731;
ID_733 = ID_725-ID_732;
ID_734 = ID_274+ID_719;
ID_735 = ID_40+ID_734;
ID_736 = ID_664+ID_735;
ID_737 = ID_514+ID_736;
ID_738 = ID_286+ID_737;
ID_739 = ID_134+ID_738;
ID_740 = ID_289+ID_726;
ID_741 = ID_137+ID_740;
ID_742 = ID_589+ID_741;
ID_743 = ID_439+ID_742;
ID_744 = ID_362+ID_743;
ID_745 = ID_210+ID_744;
ID_746 = ID_739-ID_745;
ID_747 = ID_654+ID_428;
ID_748 = ID_289+ID_747;
ID_749 = ID_40+ID_748;
ID_750 = ID_664+ID_749;
ID_751 = ID_439+ID_750;
ID_752 = ID_362+ID_751;
ID_753 = ID_134+ID_752;
ID_754 = ID_579+ID_503;
ID_755 = ID_274+ID_754;
ID_756 = ID_137+ID_755;
ID_757 = ID_589+ID_756;
ID_758 = ID_514+ID_757;
ID_759 = ID_286+ID_758;
ID_760 = ID_210+ID_759;
ID_761 = ID_753-ID_760;
ID_762 = ID_274+ID_747;
ID_763 = ID_137+ID_762;
ID_764 = ID_664+ID_763;
ID_765 = ID_439+ID_764;
ID_766 = ID_286+ID_765;
ID_767 = ID_210+ID_766;
ID_768 = ID_289+ID_754;
ID_769 = ID_40+ID_768;
ID_770 = ID_589+ID_769;
ID_771 = ID_514+ID_770;
ID_772 = ID_362+ID_771;
ID_773 = ID_134+ID_772;
ID_774 = ID_767-ID_773;
ID_775 = letrec(W0 = (ID_679, ID_691, ID_705, ID_718, ID_733, ID_746, ID_761, ID_774));
ID_776 = proj1(ID_775);
ID_777 = ID_776@0;
ID_778 = ID_467@0;
ID_779 = (ID_777+ID_778);
ID_780 = 0.37f*ID_779;
ID_781 = vslider("[1] Eq1 Freq [unit:Hz] [style:knob] [scale:log]    [tooltip: Center-frequency of second-order Regalia-Mitra peaking equalizer section 1]/[3] RM Peaking Equalizer 1/[0] Zita_Rev1 [tooltip: ~ ZITA REV1 FEEDBACK DELAY NETWORK (FDN) & SCHROEDER ALLPASS-COMB REVERBERATOR (8x8). See Faust's effect.lib for documentation and references]",315.0f,4e+01f,2.5e+03f,1.0f);
ID_782 = vslider("[2] Eq1 Level [unit:dB] [style:knob]    [tooltip: Peak level in dB of second-order Regalia-Mitra peaking equalizer section 1]/[3] RM Peaking Equalizer 1/[0] Zita_Rev1 [tooltip: ~ ZITA REV1 FEEDBACK DELAY NETWORK (FDN) & SCHROEDER ALLPASS-COMB REVERBERATOR (8x8). See Faust's effect.lib for documentation and references]",0.0f,-15.0f,15.0f,0.1f);
ID_783 = 0.05f*ID_782;
ID_784 = pow(1e+01f, ID_783);
ID_785 = max(0.0f, ID_784);
ID_786 = sqrt(ID_785);
ID_787 = ID_781/ID_786;
ID_788 = ID_26*ID_787;
ID_789 = (1.0f-ID_788);
ID_790 = (ID_788+1.0f);
ID_791 = ID_789/ID_790;
ID_792 = ID_26*ID_781;
ID_793 = cos(ID_792);
ID_794 = (ID_791+1.0f);
ID_795 = ID_793*ID_794;
ID_796 = (0.0f-ID_795);
ID_797 = W25;
ID_798 = proj0(ID_797);
ID_799 = ID_798';
ID_800 = ID_796*ID_799;
ID_801 = ID_798@2;
ID_802 = ID_791*ID_801;
ID_803 = ID_800+ID_802;
ID_804 = ID_780-ID_803;
ID_805 = letrec(W25 = (ID_804));
ID_806 = proj0(ID_805);
ID_807 = ID_806@0;
ID_808 = ID_791*ID_807;
ID_809 = ID_800+ID_801;
ID_810 = ID_808+ID_809;
ID_811 = ID_780+ID_810;
ID_812 = (ID_810-ID_780);
ID_813 = ID_784*ID_812;
ID_814 = (ID_811+ID_813);
ID_815 = 0.5f*ID_814;
ID_816 = ID_26*ID_27;
ID_817 = cos(ID_816);
ID_818 = (ID_37+1.0f);
ID_819 = ID_817*ID_818;
ID_820 = (0.0f-ID_819);
ID_821 = W26;
ID_822 = proj0(ID_821);
ID_823 = ID_822';
ID_824 = ID_820*ID_823;
ID_825 = ID_822@2;
ID_826 = ID_37*ID_825;
ID_827 = ID_824+ID_826;
ID_828 = ID_815-ID_827;
ID_829 = letrec(W26 = (ID_828));
ID_830 = proj0(ID_829);
ID_831 = ID_830@0;
ID_832 = ID_37*ID_831;
ID_833 = ID_815+ID_824;
ID_834 = ID_825+ID_833;
ID_835 = ID_832+ID_834;
ID_836 = ID_824+ID_825;
ID_837 = ID_832+ID_836;
ID_838 = (ID_837-ID_815);
ID_839 = ID_30*ID_838;
ID_840 = (ID_835+ID_839);
ID_841 = ID_22*ID_840;
ID_842 = 0.25f*ID_841;
ID_843 = 0.5f*ID_22;
ID_844 = (1.0f-ID_843);
ID_845 = IN[0]*ID_844;
ID_846 = (ID_842+ID_845);
ID_847 = ID_11*ID_846;
ID_848 = (ID_777-ID_778);
ID_849 = 0.37f*ID_848;
ID_850 = W29;
ID_851 = proj0(ID_850);
ID_852 = ID_851';
ID_853 = ID_796*ID_852;
ID_854 = ID_851@2;
ID_855 = ID_791*ID_854;
ID_856 = ID_853+ID_855;
ID_857 = ID_849-ID_856;
ID_858 = letrec(W29 = (ID_857));
ID_859 = proj0(ID_858);
ID_860 = ID_859@0;
ID_861 = ID_791*ID_860;
ID_862 = ID_853+ID_854;
ID_863 = ID_849+ID_862;
ID_864 = ID_861+ID_863;
ID_865 = ID_861+ID_862;
ID_866 = (ID_865-ID_849);
ID_867 = ID_784*ID_866;
ID_868 = (ID_864+ID_867);
ID_869 = 0.5f*ID_868;
ID_870 = W30;
ID_871 = proj0(ID_870);
ID_872 = ID_871';
ID_873 = ID_820*ID_872;
ID_874 = ID_871@2;
ID_875 = ID_37*ID_874;
ID_876 = ID_873+ID_875;
ID_877 = ID_869-ID_876;
ID_878 = letrec(W30 = (ID_877));
ID_879 = proj0(ID_878);
ID_880 = ID_879@0;
ID_881 = ID_37*ID_880;
ID_882 = ID_869+ID_873;
ID_883 = ID_874+ID_882;
ID_884 = ID_881+ID_883;
ID_885 = ID_873+ID_874;
ID_886 = ID_881+ID_885;
ID_887 = (ID_886-ID_869);
ID_888 = ID_30*ID_887;
ID_889 = (ID_884+ID_888);
ID_890 = ID_22*ID_889;
ID_891 = 0.25f*ID_890;
ID_892 = IN[1]*ID_844;
ID_893 = (ID_891+ID_892);
ID_894 = ID_11*ID_893;
SIG = (ID_847, ID_894);
